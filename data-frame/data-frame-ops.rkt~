#lang typed/racket

(require
 racket/pretty
 racket/unsafe/ops
 racket/flonum
 (only-in racket/set
	  set set-member?
	  list->set set->list
	  set-intersect set-subtract)
 (only-in grip/data/symbol
	  symbol-prefix)
 (only-in "indexed-series.rkt"
	  Label Labeling LabelProjection)
 (only-in "series.rkt"
	  series-complete)
 (only-in "series-description.rkt"
	  SeriesType Series
	  SeriesDescription-type
	  series-type series-length
          series-data)
 (only-in "data-frame.rkt"
	  DataFrame Columns new-data-frame data-frame-names
	  data-frame-series data-frame-cseries data-frame-nseries data-frame-iseries data-frame-explode
	  DataFrameDescription DataFrameDescription-series data-frame-description column-series)
 (only-in "data-frame-join.rkt"
          dest-mapping-series-builders copy-column-row-error copy-column-row join-column-name)
 (only-in "numeric-series.rkt"
	  NSeries NSeries? nseries-iref nseries-label-ref new-NSeries)
 (only-in "integer-series.rkt"
	  ISeries ISeries? iseries-iref new-ISeries
	  iseries-referencer)
 (only-in "boolean-series.rkt"
	  BSeries BSeries? bseries-iref new-BSeries
	  bseries-referencer)
 (only-in "categorical-series.rkt"
	  cseries-referencer cseries-length cseries-iref
	  CSeries CSeries? new-CSeries)
 (only-in "series-builder.rkt"
	  SeriesBuilder)
 (only-in "integer-series-builder.rkt"
	  ISeriesBuilder ISeriesBuilder?
	  append-ISeriesBuilder complete-ISeriesBuilder
	  new-ISeriesBuilder)
 (only-in "categorical-series-builder.rkt"
	  CSeriesBuilder CSeriesBuilder?
	  append-CSeriesBuilder complete-CSeriesBuilder
	  new-CSeriesBuilder)
 (only-in "categorical-series-ops.rkt"
	  cseries-append)
 (only-in "numeric-series-ops.rkt"
	  nseries-append)
 (only-in "integer-series-ops.rkt"
	  iseries-append)
 (only-in "numeric-series-builder.rkt"
	  NSeriesBuilder NSeriesBuilder?
	  append-NSeriesBuilder complete-NSeriesBuilder
	  new-NSeriesBuilder)
 (only-in "boolean-series-builder.rkt"
	  BSeriesBuilder BSeriesBuilder?
	  append-BSeriesBuilder complete-BSeriesBuilder
	  new-BSeriesBuilder)
 (only-in "data-frame-print.rkt"
          frame-write-tab))


;(: data-frame+ (DataFrame DataFrame -> DataFrame))
(: data-frame+ (DataFrame DataFrame -> DataFrame))
(define (data-frame+ dfa dfb)
  (define: cols-a    : (Setof Label) (list->set (data-frame-names dfa)))
  (define: cols-b    : (Setof Label) (list->set (data-frame-names dfb)))
  (define: append-cols : (Setof Label) (set-intersect cols-a cols-b))
  
  (new-data-frame (map (λ: ((name : Label))
                         (cons name
                               (let ((dfa-series (data-frame-series dfa name))
                                     (dfb-series (data-frame-series dfb name))) 
                                 (match (list (series-type dfa-series) (series-type dfb-series))
                                   ((list 'NumericSeries 'IntegerSeries)     (nseries-append (data-frame-nseries dfa name)
                                                                                             (data-frame-nseries dfb name)))
                                   ((list 'IntegerSeries 'NumericSeries)    (iseries-append (data-frame-iseries dfa name)
                                                                                            (data-frame-iseries dfb name)))
                                   ((list 'IntegerSeries 'IntegerSeries)    (iseries-append (data-frame-iseries dfa name)
                                                                                            (data-frame-iseries dfb name)))
                                   ((list 'NumericSeries 'NumericSeries)    (iseries-append (data-frame-iseries dfa name)
                                                                                            (data-frame-iseries dfb name)))
                                   (else (error 'data-frame+
                                                "Incorrect series type ~a ~a, must be Integer or Numeric."
                                                (series-type dfa-series) (series-type dfb-series)))))))
                         (filter (λ: ((name : Label))
                                   (set-member? append-cols name))
                                 (data-frame-names dfa)))))

;(: data-frame- (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame* (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame/ (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame% (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame== (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame!= (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame< (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame> (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame<= (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame>= (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame-pow (DataFrame DataFrame [#:on (Listof Symbol)] -> DataFrame))

;(: data-frame-abs (DataFrame [#:on (Listof Symbol)] -> DataFrame))

; DataFrame.apply(func[, axis, broadcast, ...])	Applies function along input axis of DataFrame.
; (: data-frame-apply func)

; DataFrame.applymap(func)	Apply a function to a DataFrame that is intended to operate elementwise, i.e.
; (: data-frame-applymap func)

; DataFrame.aggregate(func[, axis])	Aggregate using callable, string, dict, or list of string/callables
; (: data-frame-aggregate func)

; DataFrame.transform(func, *args, **kwargs)	Call function producing a like-indexed NDFrame
; (: data-frame-transform func)

; DataFrame.groupby([by, axis, level, ...])	Group series using mapper (dict or key function, apply given function to group, return result as series) or by a series of columns.
; (: data-frame-groupby [#:by (Listof Symbol)])
