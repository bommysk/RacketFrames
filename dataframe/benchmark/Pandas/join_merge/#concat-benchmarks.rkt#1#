#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 549 0 29 3 18 #"#lang typed/racket"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 14 3 13 #"racket/pretty"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 14 3 17 #"racket/unsafe/ops"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 14 3 13 #"racket/flonum"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 14 3 10 #"racket/set"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 25 3 1 #" "
0 0 14 3 10 #"racket/set"
0 0 25 29 1 #"\n"
0 1 25 65 1 #"\t"
0 0 25 3 2 #"  "
0 0 14 3 3 #"set"
0 0 25 3 1 #" "
0 0 14 3 11 #"set-member?"
0 0 25 29 1 #"\n"
0 1 25 65 1 #"\t"
0 0 25 3 2 #"  "
0 0 14 3 9 #"list->set"
0 0 25 3 1 #" "
0 0 14 3 9 #"set->list"
0 0 25 29 1 #"\n"
0 1 25 65 1 #"\t"
0 0 25 3 2 #"  "
0 0 14 3 13 #"set-intersect"
0 0 25 3 1 #" "
0 0 14 3 12 #"set-subtract"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 12 #"RacketFrames"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #"#|  def setup(self, axis, ignore_index):"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"        frame_c = DataFrame(np.zeros((10000, 200),"
0 0 17 29 1 #"\n"
0 0 17 3 57 #"                            dtype=np.float32, order='C'))"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"        self.frame_c = [frame_c] * 20"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"        frame_f = DataFrame(np.zeros((10000, 200),"
0 0 17 29 1 #"\n"
0 0 17 3 57 #"                            dtype=np.float32, order='F'))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"        self.frame_f "
0 0 17 3 16 #"= [frame_f] * 20"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"    def time_c_ordered(self, axis, ignore_index):"
0 0 17 29 1 #"\n"
0 0 17 3 66
#"        concat(self.frame_c, axis=axis, ignore_index=ignore_index)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"    def time_f_ordered(self, axis, ignore_index):"
0 0 17 29 1 #"\n"
0 0 17 3 66
#"        concat(self.frame_f, axis=axis, ignore_index=ignore_index)"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"now"
0 0 25 3 1 #" "
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 7 #"; Setup"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"frame-c"
0 0 25 3 2 #" ("
0 0 14 3 14 #"new-data-frame"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 9 #"for/list:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"Columns"
0 0 25 3 3 #" (["
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 11 #"new-ISeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Fixnum"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"twenty-frame-c"
0 0 25 3 2 #" ("
0 0 15 3 9 #"for/list:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 9 #"DataFrame"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 4 #"]) ("
0 0 14 3 14 #"new-data-frame"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 9 #"for/list:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"Columns"
0 0 25 3 3 #" (["
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 25 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"df~\""
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"~\""
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 11 #"new-ISeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Fixnum"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"frame-f"
0 0 25 3 2 #" ("
0 0 14 3 14 #"new-data-frame"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 9 #"for/list:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 1 #" "
0 0 14 3 7 #"Columns"
0 0 25 3 3 #" (["
0 0 14 3 3 #"col"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 25 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"df~\""
0 0 25 3 1 #" "
0 0 14 3 3 #"col"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 11 #"new-ISeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Fixnum"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"twenty-frame-f"
0 0 25 3 2 #" ("
0 0 15 3 9 #"for/list:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 25 3 1 #" "
0 0 14 3 9 #"DataFrame"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 3 #"]) "
0 0 14 3 7 #"frame-f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #"; horizontal concat benchmark"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 46 #"data-frame-list-horizontal-concat-bench-before"
0 0 25 3 2 #" ("
0 0 14 3 3 #"now"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 24 #"concat-horizontal-result"
0 0 25 3 2 #" ("
0 0 14 3 33 #"data-frame-concat-horizontal-list"
0 0 25 3 1 #" "
0 0 14 3 14 #"twenty-frame-c"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 45 #"data-frame-list-horizontal-concat-bench-after"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 3 #"now"
0 0 25 3 2 #") "
0 0 14 3 46 #"data-frame-list-horizontal-concat-bench-before"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 27 #"show-data-frame-description"
0 0 25 3 2 #" ("
0 0 14 3 22 #"data-frame-description"
0 0 25 3 1 #" "
0 0 14 3 24 #"concat-horizontal-result"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 41 #"data-frame-head concat-horizontal-result)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"fprintf"
0 0 25 3 2 #" ("
0 0 14 3 19 #"current-output-port"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 19 3 1 #"\""
0 0 19 3 9 #"DataFrame"
0 0 19 3 1 #" "
0 0 19 3 4 #"list"
0 0 19 3 1 #" "
0 0 19 3 10 #"horizontal"
0 0 19 3 1 #" "
0 0 19 3 6 #"concat"
0 0 19 3 1 #" "
0 0 19 3 5 #"bench"
0 0 19 3 1 #" "
0 0 19 3 2 #"~v"
0 0 19 3 6 #" ms.\\n"
0 0 19 3 1 #"\""
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 45 #"data-frame-list-horizontal-concat-bench-after"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Pandas"
0 0 19 3 1 #" "
0 0 19 3 8 #"Compare*"
0 0 19 3 1 #" "
0 0 19 3 42 #"join_merge.ConcatDataFrames.time_c_ordered"
0 0 19 3 9 #" 123.69ms"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";vertical concat benchmark"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 44 #"data-frame-list-vertical-concat-bench-before"
0 0 25 3 2 #" ("
0 0 14 3 3 #"now"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 22 #"concat-vertical-result"
0 0 25 3 2 #" ("
0 0 14 3 31 #"data-frame-concat-vertical-list"
0 0 25 3 1 #" "
0 0 14 3 14 #"twenty-frame-f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 43 #"data-frame-list-vertical-concat-bench-after"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 3 #"now"
0 0 25 3 2 #") "
0 0 14 3 44 #"data-frame-list-vertical-concat-bench-before"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 27 #"show-data-frame-description"
0 0 25 3 2 #" ("
0 0 14 3 22 #"data-frame-description"
0 0 25 3 1 #" "
0 0 14 3 22 #"concat-vertical-result"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"fprintf"
0 0 25 3 2 #" ("
0 0 14 3 19 #"current-output-port"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 19 3 1 #"\""
0 0 19 3 9 #"DataFrame"
0 0 19 3 1 #" "
0 0 19 3 4 #"list"
0 0 19 3 1 #" "
0 0 19 3 8 #"vertical"
0 0 19 3 1 #" "
0 0 19 3 6 #"concat"
0 0 19 3 1 #" "
0 0 19 3 5 #"bench"
0 0 19 3 1 #" "
0 0 19 3 2 #"~v"
0 0 19 3 6 #" ms.\\n"
0 0 19 3 1 #"\""
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 43 #"data-frame-list-vertical-concat-bench-after"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Pandas"
0 0 19 3 1 #" "
0 0 19 3 8 #"Compare*"
0 0 19 3 1 #" "
0 0 19 3 42 #"join_merge.ConcatDataFrames.time_f_ordered"
0 0 19 3 1 #" "
0 0 19 3 9 #"123.28ms\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"series-append"
0 0 25 3 2 #" ("
0 0 14 3 11 #"new-ISeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Fixnum"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 3 #") ("
0 0 14 3 11 #"new-ISeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Fixnum"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 13 #"series-append"
0 0 25 3 2 #" ("
0 0 14 3 11 #"new-CSeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 3 #") ("
0 0 14 3 11 #"new-CSeries"
0 0 25 3 2 #" ("
0 0 15 3 11 #"for/vector:"
0 0 25 3 1 #" "
0 0 14 3 1 #":"
0 0 25 3 2 #" ("
0 0 14 3 8 #"Vectorof"
0 0 25 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 25 3 4 #") (["
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"N"
0 0 25 3 3 #"]) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0           0
