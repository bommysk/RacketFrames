# The variable section is visible to all the blocks.
variables:
  DEPLOY_PATH: /org/seg/tools/eda/apple/splunk/splunk_capture
  VERSION: v008
# The stages section defines the stages of the pipline.
# The stages are referenced in the jobs by the 'stage' key.
stages:
  - test
  - functional_test
  - document
  - deploy
  - deploy_email
  - cleanup


#Before script
before_script:
    - echo "==== START BEFORE SCRIPT ===="
    - whoami
    - env
    - echo "==== END BEFORE SCRIPT ===="

################################
# Jobs in the test stage.
################################

# This job runs all the tests using nosetests as runner.
unittests:
  stage: test
  script:
    - cd test
    - python runner.py | grep FAIL
    - retVal=$?; if [ $retVal -e 0 ]; then echo "One or more tests failed. Stopping pipeline."; exit 1; fi; exit $retVal
  tags:
    - splunk_capture_test
    
functionaltests:
  stage: functional_test
  script:
    - cd functional_tests
    - ./test.sh -load_list=test_list.txt | grep FAIL
    - retVal=$?; if [ $retVal -e 0 ]; then echo "One or more tests failed. Stopping pipeline."; exit 1; fi; exit $retVal
  tags:
    - splunk_capture_test
  
################################
# Jobs in the deploy stage.
################################

# Sets up a manual trigger to sync the build to disc.
"Deploy to Disk":
  stage: deploy
  script:
    - echo "Deploying"
    # cd to deploy path
    - cd $DEPLOY_PATH
    # CI_COMMIT_TAG: next version. Example: v007
    - echo $VERSION
    - git clone gitlab@gitlab.csg.apple.com:splunk-cli/splunk_capture.git $VERSION
    # compile to pyc
    - python -mcompileall $VERSION/*
    # (remove source code .py files)
    - find $VERSION -iname '*.py' -exec rm -f {} \;
    # (remove .git* files)
    - find $VERSION -iname '.git*' -exec rm -f {} \;
    # unlink existing beta
    - if [-e beta]; then unlink beta; fi
    # link new version to beta
    - ln -s $VERSION beta
    # change mode
    - chmod -R -w beta
  tags:
    - splunk_capture_deploy

# Notify with email once successfully deployed.  
"Send SEG CAD info":
  stage: deploy_email
  script:
    - echo "Splunk Capture has been successfully deployed." | sendmail -f skahal@apple.com -t hemanth@apple.com,skahal@apple.com
  tags:
    - splunk_capture_deploy

cleanup_job:
  stage: cleanup
  script:
    - echo "cleanup after jobs"
  when: always
